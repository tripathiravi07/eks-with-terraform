name: EKS Plan and Notify

on:
  workflow_dispatch:
#   pull_request:
#     branches:
#       - main
permissions: write-all

jobs:
  eks-plan:
    name: Terraform Plan for EKS Upgrade (Only if Needed)
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      REGION: us-east-1
      TF_DIR: ./regions/us-east-1

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.REGION }}

      - name: Install AWS CLI & jq
        run: |
          sudo apt-get update
          sudo apt-get install -y curl unzip jq awscli

      - name: Get Cluster Name from Terraform Output
        id: get-cluster
        working-directory: ${{ env.TF_DIR }}
        run: |
          terraform init -backend=false
          CLUSTER_NAME=$(terraform output -json | jq -r '.["eks-cluster-name"].value')
          echo "CLUSTER_NAME=$CLUSTER_NAME" >> $GITHUB_ENV

      - name: Get Current and Latest EKS Versions
        id: version-check
        run: |
          CURRENT_VERSION=$(aws eks describe-cluster --name $CLUSTER_NAME --region $REGION | jq -r '.cluster.version')
          LATEST_VERSION=$(aws eks describe-cluster-versions --region $REGION | jq -r '.clusterVersions[0].clusterVersion')

          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV
          echo "LATEST_VERSION=$LATEST_VERSION" >> $GITHUB_ENV

          if [ "$CURRENT_VERSION" = "$LATEST_VERSION" ]; then
            echo "✅ EKS cluster is already on the latest version: $CURRENT_VERSION"
            echo "UPGRADE_NEEDED=false" >> $GITHUB_ENV
          else
            echo "🔔 Upgrade needed: $CURRENT_VERSION → $LATEST_VERSION"
            echo "UPGRADE_NEEDED=true" >> $GITHUB_ENV
          fi

      - name: Exit if No Upgrade Needed
        if: env.UPGRADE_NEEDED == 'false'
        run: |
          echo "No upgrade required. Exiting..."
          exit 0

      - name: Setup Terraform
        if: env.UPGRADE_NEEDED == 'true'
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Terraform Init
        if: env.UPGRADE_NEEDED == 'true'
        working-directory: ${{ env.TF_DIR }}
        env:
          TF_BACKEND_BUCKET: ${{ secrets.TF_BACKEND_BUCKET }}
          TF_BACKEND_KEY: ${{ secrets.TF_BACKEND_KEY }}
          TF_BACKEND_REGION: ${{ secrets.TF_BACKEND_REGION }}
        run: |
          terraform init -reconfigure \
            -backend-config="bucket=${TF_BACKEND_BUCKET}" \
            -backend-config="key=${TF_BACKEND_KEY}" \
            -backend-config="region=${TF_BACKEND_REGION}"

      - name: Terraform Plan
        if: env.UPGRADE_NEEDED == 'true'
        id: plan
        working-directory: ${{ env.TF_DIR }}
        continue-on-error: true
        run: |
          terraform plan -no-color > tfplan.txt
          echo "PLAN_STATUS=$?" >> $GITHUB_ENV

      - name: Prepare Summary + Plan Output
        if: env.UPGRADE_NEEDED == 'true'
        working-directory: ${{ env.TF_DIR }}
        run: |
          if [ "${{ env.PLAN_STATUS }}" -eq 0 ]; then
            echo "✅ Terraform plan succeeded" > plan_comment.txt
          else
            echo "❌ Terraform plan failed" > plan_comment.txt
          fi
          echo '' >> plan_comment.txt
          echo '```hcl' >> plan_comment.txt
          cat tfplan.txt >> plan_comment.txt
          echo '```' >> plan_comment.txt

      - name: Post Sticky PR Comment
        if: env.UPGRADE_NEEDED == 'true'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          recreate: true
          path: ./regions/us-east-1/plan_comment.txt

      - name: Add PR Labels
        if: env.UPGRADE_NEEDED == 'true'
        uses: actions-ecosystem/action-add-labels@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          labels: |
            type: infra-change
            needs-approval